name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Create .env file for testing
      run: |
        touch .env
        echo "VITE_API_URL=${{ secrets.VITE_API_URL || 'https://pokeapi.co/api/v2' }}" >> .env
        echo "VITE_API_GRAPHQL_URL=${{ secrets.VITE_API_GRAPHQL_URL || 'https://beta.pokeapi.co/graphql/v1beta' }}" >> .env
        echo "VITE_ENABLE_ANALYTICS=${{ secrets.VITE_ENABLE_ANALYTICS || 'false' }}" >> .env
        echo "VITE_ENABLE_TCG_CARDS=${{ secrets.VITE_ENABLE_TCG_CARDS || 'true' }}" >> .env
        echo "VITE_ENABLE_ADVANCED_SEARCH=${{ secrets.VITE_ENABLE_ADVANCED_SEARCH || 'true' }}" >> .env
    
    - name: Run linting
      run: npm run lint || echo "Linting failed but continuing..."
    
    - name: Run tests
      run: npm run test:ci
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-coverage
        path: coverage
        retention-days: 7

  build-and-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Create .env file
      run: |
        touch .env
        echo "VITE_API_URL=${{ secrets.VITE_API_URL || 'https://pokeapi.co/api/v2' }}" >> .env
        echo "VITE_API_GRAPHQL_URL=${{ secrets.VITE_API_GRAPHQL_URL || 'https://beta.pokeapi.co/graphql/v1beta' }}" >> .env
        echo "VITE_ENABLE_ANALYTICS=${{ secrets.VITE_ENABLE_ANALYTICS || 'false' }}" >> .env
        echo "VITE_ENABLE_TCG_CARDS=${{ secrets.VITE_ENABLE_TCG_CARDS || 'true' }}" >> .env
        echo "VITE_ENABLE_ADVANCED_SEARCH=${{ secrets.VITE_ENABLE_ADVANCED_SEARCH || 'true' }}" >> .env
    
    - name: Build
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist
        retention-days: 30
    
  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist
        
    - name: Create .env file for deployment
      run: |
        touch .env
        echo "NETLIFY_AUTH_TOKEN=${{ secrets.NETLIFY_AUTH_TOKEN }}" >> .env
        echo "NETLIFY_SITE_ID=${{ secrets.NETLIFY_SITE_ID }}" >> .env
    
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions - ${{ github.sha }}"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 10
